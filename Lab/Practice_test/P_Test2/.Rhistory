source('H:/COMP120/Lab/Lb07/mastery/mastery-07.R')
source('H:/COMP120/Lab/Lb07/mastery/mastery-07.R')
source('H:/COMP120/Lab/Lb07/mastery/mastery-07.R')
source('H:/COMP120/Lab/Lb07/mastery/mastery-07.R')
be included below.
# Don't forget to add your student id and the name in the file (see placeholders above).
# Write a comment before each block of code that you use to complete
# a given task that explains what the c
library(tidyverse)
library(lubridate)
ardern_tweets <- read_csv("ardern_tweets.csv")
winston_tweets <- read_csv("winston_tweets.csv")
tweets <- ardern_tweets %>%
bind_rows(winston_tweets) %>%
select(created, text, isRetweet, screenName)
tweets$year <- year(tweets$created)
tweets %>%
mutate(year = as.factor(year)) %>%
ggplot(aes(x = year, fill = year)) +
geom_bar() +
ggtitle("Tweets per year") +
xlab("Year") +
ylab("Count")
yearly_tweet_counts <- tweets %>%
group_by(year) %>%
summarise(n = n())
tweets %>%
filter(isRetweet == FALSE) %>%
filter(year == 2013|year == 2014|year == 2015|year == 2016|year == 2017|year == 2018) %>%
ggplot(aes(x=year))+
geom_bar(aes(fill=screenName), position = "dodge")+
xlab("Year")+
ylab("Tweet counts")+
ggtitle("Comparision of tweet counts")
yearly_tweet_counts <- tweets %>%
group_by(year) %>%
summarise(n = n())
yearly_tweet_count_jacinda <- tweets %>%
filter(screenName == "jacindaardern")
group_by(year) %>%
summarise(n = n())
yearly_tweet_counts <- tweets %>%
group_by(year) %>%
summarise(n = n())
yearly_tweet_count_jacinda <- tweets %>%
filter(screenName == "jacindaardern") %>%
group_by(year) %>%
summarise(n = n())
yearly_tweet_count_winston <- tweets %>%
filter(screenName == "winstonpeters") %>%
group_by(year) %>%
summarise(n = n())
tweet_url_counts <- tweets %>%
filter(isRetweet == FALSE) %>%
filter(year == 2013|year == 2014|year == 2015|year == 2016|year == 2017|year == 2018) %>%
count(screenName,year,
hasUrl = ifelse(str_detect(text, "t\\.co"),
1, 0)) %>%
filter(hasUrl == 1) %>%
select(-hasUrl)
tweet_url_counts %>%
ggplot()+
geom_line(mapping = aes(x=year, y=n, col=screenName))+
xlab("Year")+
ylab("Counts of links")+
ggtitle("Comparision of URL counts")
library(tidyverse)
library(lubridate)
ardern_tweets <- read_csv("ardern_tweets.csv")
winston_tweets <- read_csv("winston_tweets.csv")
tweets <- ardern_tweets %>%
bind_rows(winston_tweets) %>%
select(created, text, isRetweet, screenName)
tweets$year <- year(tweets$created)
tweets %>%
mutate(year = as.factor(year)) %>%
ggplot(aes(x = year, fill = year)) +
geom_bar() +
ggtitle("Tweets per year") +
xlab("Year") +
ylab("Count")
yearly_tweet_counts <- tweets %>%
group_by(year) %>%
summarise(n = n())
yearly_tweet_count_jacinda <- tweets %>%
filter(screenName == "jacindaardern") %>%
group_by(year) %>%
summarise(n = n())
yearly_tweet_count_winston <- tweets %>%
filter(screenName == "winstonpeters") %>%
group_by(year) %>%
summarise(n = n())
tweets %>%
filter(isRetweet == FALSE) %>%
filter(year == 2013|year == 2014|year == 2015|year == 2016|year == 2017|year == 2018) %>%
ggplot(aes(x=year))+
geom_bar(aes(fill=screenName), position = "dodge")+
xlab("Year")+
ylab("Tweet counts")+
ggtitle("Comparision of tweet counts")
tweet_url_counts <- tweets %>%
filter(isRetweet == FALSE) %>%
filter(year == 2013|year == 2014|year == 2015|year == 2016|year == 2017|year == 2018) %>%
count(screenName,year,
hasUrl = ifelse(str_detect(text, "t\\.co"),
1, 0)) %>%
filter(hasUrl == 1) %>%
select(-hasUrl)
tweet_url_counts %>%
ggplot()+
geom_line(mapping = aes(x=year, y=n, col=screenName))+
xlab("Year")+
ylab("Counts of links")+
ggtitle("Comparision of URL counts")
setwd("H:/COMP120/Lab/Practice_test/P_Test2")
library(tidyverse)
info.204 <- read_tsv("INFO204-2017-results-mod.tsv", na="?")
info.204$Gender <- factor(info.204$Gender,
levels=c("F", "M", "U"),
labels=c("Female", "Male", "Unspecified"))
setwd("H:/COMP120/Lab/Lab04")
library(tidyverse)
info.204 <- read_tsv("INFO204-2017-results-mod.tsv", na="?")
info.204$Gender <- factor(info.204$Gender,
levels=c("F", "M", "U"),
labels=c("Female", "Male", "Unspecified"))
info.204$Grade <- ordered(info.204$Grade,
levels=c("E", "D",
"C-", "C", "C+",
"B-", "B", "B+",
"A-", "A", "A+"))
nrow(info.204)
ncol(info.204)
rownames(info.204)
colnames(info.204)
head(info.204)
plot(info.204$Internal, info.204$Exam)
with(info.204, plot(Internal, Exam))
with(info.204, plot(Internal, Exam,
main="INFO 204 2017, Internal vs. Exam Performance",
xlim=c(0, 45), xlab="Internal Mark (/45)",
ylim=c(0, 55), ylab="Exam Performance (/55)",
pch=19, col="orange"))
with(info.204, plot(Internal, Exam,
main="INFO 204 2017, Internal vs. Exam Performance",
xlim=c(0, 45), xlab="Internal Mark (/45)",
ylim=c(0, 55), ylab="Exam Performance (/55)",
pch=19, col=ifelse(PassedTutorials, "orange", "purple")))
legend("topleft", ## the legend position - the top-left corner,
c("Passed Tutorials", "Failed Tutorials"), ## the legend text
pch=19, ## point style to use for the legend (solid dots)
col=c("orange", "purple"), ## the colours to use for each dot
## in the legend
bty="n" ## should a box be placed around the legend (NO!)
)
plot.data <- data.frame(x=seq(-2*pi, 2*pi, length.out=201) +
rnorm(201, sd=0.05))
plot.data$f <- with(plot.data, x^2 + 10*sin(x))
plot.data$y <- plot.data$f + rnorm(201)
with(plot.data, plot(x, y, col="orange"))
with(plot.data, lines(x, f, col="black"))
otago.blue <- "#00508F" ## the official colour code for the blue in
breaks <- seq(0, 100, 5) ## the histogram broken down into bins
## of five marks from 0 to 100
with(info.204, hist(Internal+Exam, breaks=breaks,
col=otago.blue,
xlab="Mark (/100)",
main="INFO 204 2017 Final Marks"))
with(info.204, hist(Final, breaks=breaks,
col=otago.blue,
xlab="Mark (/100)",
main="INFO 204 2017 Final Marks"))
grade.tally <- table(info.204$Grade)
grade.tally
barplot(grade.tally,main = "Grades Frequency")
## ggplot2
ggplot(info.204) +
geom_point(aes(x=Internal, y=Exam,colour=PassedTutorials))
ggplot(info.204, aes(x=Internal, y=Exam)) +
geom_point(aes(colour=PassedTutorials)) +
xlab("Internal Mark (/45)") + ylab("Exam Mark (/55)") +
scale_colour_manual( ## sets colours manually
values=c("orange", "purple"),
labels=c("Passed Tutorials", "Failed Tutorials")) +
theme(legend.position="bottom") ## legend is set at the bottom
## ggplot2
ggplot(info.204) +
geom_point(aes(x=Internal, y=Exam,colour=PassedTutorials))
ggplot(info.204, aes(x=Internal, y=Exam)) +
geom_point(aes(colour=PassedTutorials)) +
xlab("Internal Mark (/45)") + ylab("Exam Mark (/55)") +
scale_colour_manual( ## sets colours manually
values=c("orange", "purple"),
labels=c("Passed Tutorials", "Failed Tutorials")) +
theme(legend.position="bottom") ## legend is set at the bottom
setwd("H:/COMP120/Lab/Practice_test/P_Test2")
git add .
