geom_bar()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot()+
geom_bar(Region,n)
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(Region,n=n()) %>%
ggplot()+
geom_bar()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(=n()) %>%
ggplot()+
geom_bar()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot()+
geom_bar()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n())
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n())
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot(aes(Region)) %>%
geom_col()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot(aes(Region)) +
geom_col()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot(aes(Region,n)) +
geom_col()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot(aes(Region,n)) +
geom_col %>% coord_flip()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot(aes(Region,n)) +
geom_col %>% coord_flip()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot(aes(Region,n)) +
geom_col +
coord_flip()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot(aes(Region,n)) +
geom_col +
coord_flip()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot(aes(Region,n)) +
geom_col() +
coord_flip()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot(aes(Region,n)) +
geom_col() +
coord_flip()+
ggtitle("Counts of lakes by region")+
xlab("Counts of Lakes")+
ylab("Regions")
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot(aes(Region,n)) +
geom_col() +
ggtitle("Counts of lakes by region")+
xlab("Counts of Lakes")+
ylab("Regions")+
coord_flip()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot(aes(Region,n)) +
geom_col() +
ggtitle("Counts of lakes by region")+
xlab("Counts of Lakes")+
ylab("Regions")+
coord_flip()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot(aes(Region,n)) +
geom_col() +
ggtitle("Counts of lakes by region")+
xlab("Regions")+
ylab("Counts of Lakes")+
coord_flip()
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot(aes(reorder(Region,n),n)) +
geom_col() +
ggtitle("Counts of lakes by region")+
xlab("Regions")+
ylab("Counts of Lakes")+
coord_flip()
#Code for the second visualisation
lakes %>%
arrange(SurfaceArea)
#Code for the second visualisation
lakes %>%
arrange(SurfaceArea, desc=FALSE)
#Code for the second visualisation
lakes %>%
arrange(SurfaceArea, desc=TRUE)
#Code for the second visualisation
lakes %>%
arrange(SurfaceArea, ascending=TRUE)
?arrange
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(SurfaceArea)
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(desc(SurfaceArea))
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(desc(SurfaceArea)) %>% head(4)
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot() %>%
geom_bar(aes(x=Region+Name,y=SurfaceArea))
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot() %>%
geom_bar(aes(x=Region&Name,y=SurfaceArea))
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot() %>%
geom_bar(aes(x=Region,y=SurfaceArea))
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot() +
geom_bar(aes(x=Region&Name,y=SurfaceArea))
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot() +
geom_bar(aes(x=Region+Name,y=SurfaceArea))
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot() +
geom_bar(aes(x=Region,Name,y=SurfaceArea))
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot() +
geom_bar(aes(x=Region,y=SurfaceArea))
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot(aes(x=Region,y=SurfaceArea)) +
geom_bar(stat = "identity")
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot(aes(x=reorder(Region,SurfaceArea),y=SurfaceArea)) +
geom_bar(stat = "identity")
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot(aes(x=reorder(Name,SurfaceArea),y=SurfaceArea)) +
geom_bar(stat = "identity")
?reorder
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot(aes(x=reorder(Name,SurfaceArea),y=SurfaceArea)) +
geom_bar(stat = "identity")
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot(aes(x=reorder(Name,desc(SurfaceArea)),y=SurfaceArea)) +
geom_bar(stat = "identity")
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot(aes(x=reorder(Name_Region,desc(SurfaceArea)),y=SurfaceArea)) +
geom_bar(stat = "identity")
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
mutate(Name_Region = Name+Region) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot(aes(x=reorder(Name_Region,desc(SurfaceArea)),y=SurfaceArea)) +
geom_bar(stat = "identity")
#convert html node into dataframe then convert it to tibble
lakes <- page %>%
html_node("#mw-content-text > div.mw-parser-output > table:nth-child(18)") %>%
html_table(fill = TRUE) %>%
as.tibble()
#assign new names for columns
colnames(lakes) <- c("Rank", "Name", "SurfaceArea", "Region", "Notes")
#mutate Rank, and Name column
lakes <- lakes %>% mutate(
Rank=as.numeric(str_replace_all(Rank, "=", ""))
)
#remove the row that does not contain details about a lake.
lakes <- lakes[!is.na(lakes$Rank),]
#extract the first set of digits corresponding to surface area in square kilometres
lakes$SurfaceArea <- str_extract(lakes$SurfaceArea, "\\d*")
#convert SurfaceArea to numeric data type column
lakes <- lakes %>% mutate(
SurfaceArea=as.numeric(SurfaceArea)
)
#view the final tibble
lakes
#Code for the first visualisation
lakes %>%
group_by(Region) %>%
summarise(n=n()) %>%
ggplot(aes(reorder(Region,n),n)) +
geom_col() +
ggtitle("Counts of lakes by region")+
xlab("Regions")+
ylab("Counts of Lakes")+
coord_flip()
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
mutate(Name_Region = Name+Region) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot(aes(x=reorder(Name_Region,desc(SurfaceArea)),y=SurfaceArea)) +
geom_bar(stat = "identity")
?reorder
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
mutate(Name_Region = Name+Region) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot(aes(x=reorder(Name_Region,desc(SurfaceArea)),y=SurfaceArea)) +
geom_bar(stat = "identity")
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
mutate(Name_Region = str_c(Name,Region,sep = " ")) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot(aes(x=reorder(Name_Region,desc(SurfaceArea)),y=SurfaceArea)) +
geom_bar(stat = "identity")
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
mutate(Name_Region = str_c(Name,Region,sep = " ")) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot(aes(x=reorder(Name_Region,desc(SurfaceArea)),y=SurfaceArea)) +
geom_bar(stat = "identity")+
ggtitle("Top four lakes by surface area")+
xlab("Lake name and region")+
ylab("Surface Area")
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
mutate(Name_Region = str_c(Name,Region,sep = " ")) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot(aes(x=reorder(Name_Region,desc(SurfaceArea)),y=SurfaceArea)) +
geom_bar(stat = "identity")+
ggtitle("Top four lakes by surface area",center=TRUE)+
xlab("Lake name and region")+
ylab("Surface Area")
#Code for the second visualisation
lakes %>%
select(Name,Region,SurfaceArea) %>%
mutate(Name_Region = str_c(Name,Region,sep = " ")) %>%
arrange(desc(SurfaceArea)) %>%
head(4) %>%
ggplot(aes(x=reorder(Name_Region,desc(SurfaceArea)),y=SurfaceArea)) +
geom_bar(stat = "identity")+
ggtitle("Top four lakes by surface area")+
xlab("Lake name and region")+
ylab("Surface Area")
#Code for scraping the data from https://www.worldometers.info/gdp/gdp-by-country/ and also cleaning it
worldometers.page <- "https://www.worldometers.info/gdp/gdp-by-country/"
page   <- read_html(worldometers.page)
#convert html node into dataframe then convert it to tibble
countries <- page %>%
html_node("#example2") %>%
html_table(fill = TRUE) %>%
as.tibble()
countries
#We are only interested in data for five columns (the first three columns and columns five and six) out of a total of eight columns
countries[1]
#We are only interested in data for five columns (the first three columns and columns five and six) out of a total of eight columns
countries <- countries[1,2,3,5,6]
countries
#convert html node into dataframe then convert it to tibble
countries <- page %>%
html_node("#example2") %>%
html_table(fill = TRUE) %>%
as.tibble()
#We are only interested in data for five columns (the first three columns and columns five and six) out of a total of eight columns
countries <- countries[1,2,3,5,6]
countries
#convert html node into dataframe then convert it to tibble
countries <- page %>%
html_node("#example2") %>%
html_table(fill = TRUE) %>%
as.tibble()
colnames(countries)
cols <- colnames(countries)
cols[1]
cols[1,2]
cols[c(1,2)]
countries[c(1,2,3)]
#We are only interested in data for five columns (the first three columns and columns five and six) out of a total of eight columns
countries <- countries[c(1,2,3,5,6)]
#convert html node into dataframe then convert it to tibble
countries <- page %>%
html_node("#example2") %>%
html_table(fill = TRUE) %>%
as.tibble()
#We are only interested in data for five columns (the first three columns and columns five and six) out of a total of eight columns
countries <- countries[c(1,2,3,5,6)]
countries
#assign new names for columns
colnames(countries) <- c("Rank", "Country", "GDP", "GDP_growth", "Population")
countries
GDPbyCountry <- countries
#clean the GDP column by removing comma (,), dollar sign ($), and the percent (%) symbols.
GDPbyCountry$GDP <- str_replace_all(GDPbyCountry$GDP, ",|\\$|%", "" )
GDPbyCountry
GDPbyCountry$GDP_growth <- str_replace_all(GDPbyCountry$GDP_growth, "%", "")
GDPbyCountry
GDPbyCountry$Population <- str_replace_all(GDPbyCountry$Population, ",", "" )
GDPbyCountry
GDPbyCountry <- GDPbyCountry %>%
mutate(GDP=as.numeric(GDP),
GDP_growth=as.numeric(GDP_growth),
Population=as.numeric(Population))
GDPbyCountry
#Code for the third visualisation
GDPbyCountry %>%
select(Population,GDP_growth,Country) %>%
arrange(desc(Population)) %>%
head(5)
#Code for the third visualisation
GDPbyCountry %>%
select(Population,GDP_growth,Country) %>%
arrange(desc(Population)) %>%
head %>%
ggplot(aes(x=Population,y=GDP_growth))+
geom_point()+
ggtitle("GDP growth rate of top-5 populous nations") +
theme(axis.text.x = element_text(angle=90, hjust=1),
axis.title.x = element_blank(),
plot.title = element_text(hjust = 0.5))
#Code for the third visualisation
GDPbyCountry %>%
select(Population,GDP_growth,Country) %>%
arrange(desc(Population)) %>%
head %>%
ggplot(aes(x=Population,y=GDP_growth))+
geom_point(aes(color="red", size=3))+
ggtitle("GDP growth rate of top-5 populous nations") +
theme(axis.text.x = element_text(angle=90, hjust=1),
axis.title.x = element_blank(),
plot.title = element_text(hjust = 0.5))
#Code for the third visualisation
GDPbyCountry %>%
select(Population,GDP_growth,Country) %>%
arrange(desc(Population)) %>%
head %>%
ggplot(aes(x=Population,y=GDP_growth))+
geom_point(color="red", size=3)+
ggtitle("GDP growth rate of top-5 populous nations") +
theme(axis.text.x = element_text(angle=90, hjust=1),
axis.title.x = element_blank(),
plot.title = element_text(hjust = 0.5))
#Code for the third visualisation
GDPbyCountry %>%
select(Population,GDP_growth,Country) %>%
arrange(desc(Population)) %>%
head %>%
ggplot(aes(x=Population,y=GDP_growth))+
geom_point(color="red", size=3)+
geom_text(aes(label = Country), nudge_y = 2) +
ggtitle("GDP growth rate of top-5 populous nations")+
xlab("Population")+
ylab("GDP growth rate")
#Code for the third visualisation
GDPbyCountry %>%
select(Population,GDP_growth,Country) %>%
arrange(desc(Population)) %>%
head %>%
ggplot(aes(x=Population,y=GDP_growth))+
geom_point(color="red", size=3)+
geom_text(aes(label = Country), nudge_y = 0.2) +
ggtitle("GDP growth rate of top-5 populous nations")+
xlab("Population")+
ylab("GDP growth rate")
#Code for the third visualisation
GDPbyCountry %>%
select(Population,GDP_growth,Country) %>%
arrange(desc(Population)) %>%
head %>%
ggplot(aes(x=Population,y=GDP_growth))+
geom_point(color="red", size=3)+
geom_text(aes(label = Country), nudge_y = 0.15) +
ggtitle("GDP growth rate of top-5 populous nations")+
xlab("Population")+
ylab("GDP growth rate")
#Code for the third visualisation
GDPbyCountry %>%
select(Population,GDP_growth,Country) %>%
arrange(desc(Population)) %>%
head(5) %>%
ggplot(aes(x=Population,y=GDP_growth))+
geom_point(color="red", size=3)+
geom_text(aes(label = Country), nudge_y = 0.15) +
ggtitle("GDP growth rate of top-5 populous nations")+
xlab("Population")+
ylab("GDP growth rate")
#Code for the third visualisation
GDPbyCountry %>%
select(Population,GDP_growth,Country) %>%
arrange(desc(Population)) %>%
head(10) %>%
ggplot(aes(x=Population,y=GDP_growth))+
geom_point(color="red", size=3)+
geom_text(aes(label = Country), nudge_y = 0.15) +
ggtitle("GDP growth rate of top-5 populous nations")+
xlab("Population")+
ylab("GDP growth rate")
#Code for the third visualisation
GDPbyCountry %>%
select(Population,GDP_growth,Country) %>%
arrange(desc(Population)) %>%
head(5) %>%
ggplot(aes(x=Population,y=GDP_growth))+
geom_point(color="red", size=3)+
geom_text(aes(label = Country), nudge_y = 0.15) +
ggtitle("GDP growth rate of top-5 populous nations")+
xlab("Population")+
ylab("GDP growth rate")
