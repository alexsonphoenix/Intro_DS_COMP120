v <- c(1,5,10,99,10,100)
v==10
which(v==10)
length(which(v==10))
count <- function(v,e) {
length(which(v==e))
}
contains <- function(v, e) {
length(which(v==e)) > 0
}
contains(v,5)
v[1]
v[which(v==10)]
v[v==10]
setwd("H:/COMP120/Lec")
library(lubridate)
?parse_date_time
parse_date_time("04/08/2020 1:58pm", orders = "D/M/Y H:M")
parse_date_time("04/08/2020 1:58pm", orders = "d/m/Y H:M")
parse_date_time("04-08-2020 13:58:00", orders = "d/m/Y H:M:S")
parse_date_time("04/08/2020 1:58pm", orders = "d/m/Y H:M%p")
parse_date_time("04/08/2020 1:58pm", orders = "d/m/Y H:M%p")
parse_date_time("04/08/2020 1:58pm", orders = "d/m/Y H:M")
parse_date_time("04/08/2020 1:58pm", orders = "d/m/Y H:M%p")
parse_date_time("04-08-2020 13:58:00", orders = "d/m/Y H:M:S")
parse_date_time("04/08/20 13:58", orders = "d/m/y H:M")
parse_date_time("4th August 2020 13:58", orders = "d m Y H:M")
parse_date_time("08/04/20 1:58:00 PM", orders = "m/d/y H:M:S %p")
# Practice Questions taken from Lecture 10, Data Wrangling (I), Data Manipulation Functions
library("tidyverse")
flights %>%
select(arr_delay) %>%
filter(arr_delay >= 120)
library(nycflights13)
flights %>%
select(arr_delay) %>%
filter(arr_delay >= 120)
flights %>%
select(arr_delay, dep_delay) %>%
filter(arr_delay >= 120 & dep_delay <= 0)
flights %>%
select(arr_delay, dep_delay) %>%
filter(arr_delay >= 120 & dep_delay <= 0) %>%
arrange(desc(arr_delay))
flights %>%
select(arr_delay, dep_delay) %>%
filter(arr_delay >= 120 & dep_delay <= 0) %>%
arrange(desc(arr_delay)) %>%
ggplot() +
geom_point(aes(dep_delay, arr_delay)) +
xlab("Departure delay") +
ylab("Arrival delay")
flights %>%
select(arr_delay, dep_delay) %>%
filter(arr_delay >= 120 & dep_delay <= 0) %>%
ggplot() +
geom_point(aes(dep_delay, arr_delay)) +
xlab("Departure delay") +
ylab("Arrival delay")
flights %>%
filter(carrier == "UA") %>%
filter(air_time > 120)
flights %>%
select(year:arr_time)
flights %>%
select(-(year:arr_time))
flights %>%
filter(carrier == "UA" & air_time > 120)
flights %>%
select(tailnum, air_time) %>%
arrange(desc(air_time))
mod_flights <- flights %>%
mutate(
air_time_hours = air_time / 60)
mod_flights %>%
select(air_time_hours, everything())
mod_flights %>%
select(flight, air_time, air_time_hours) %>%
filter(air_time_hours > 4)
flights %>%
mutate(air_time_hours = air_time / 60) %>%
select(flight, air_time, air_time_hours) %>%
filter(air_time_hours > 4)
flights %>%
mutate(air_time_hours = air_time / 60) %>%
select(flight, air_time, air_time_hours) %>%
filter(air_time_hours > 4)
