# Question 1 on writing single commands
cat_names <- c("Fuzzy", "Bubbly", "Daisy", "Aldo", "Jasper")
cat_ages <- c(7, 5, 4, 9, 2)
cat_genders <- c("Male", "Female", "Female", "Male", "Male")
cat_owners <- c("Jay", "Nathan", "Ruth", "Nathan", "Sandra")
# Question 1a
mean(cat_ages)
## You will need to load the following libraries (i.e., run the following lines of code)
library(tidyverse)
library(lubridate)
# Question 1b
cats <- tibble(cat_names,cat_ages,cat_genders,cat_owners)
View(cats)
cats %>%
filter(cat_genders=="Male") %>%
select(cat_owners)
# Question 1c
cats %>%
filter(cat_ages>4 & cat_genders=="Female") %>%
select(cat_names)
# Question 2 on writing a function
compute_BMI <- function(height,weight){
return(weight/(height*height))
}
compute_BMI(1.75, 75)
compute_BMI(c(1.75, 1.85), c(75, 85)) #Test
# Question 3 - provide answers to all the parts of the question (a-g) below
# Question 3a
growth_tbl <- read_csv("scales.csv", na=c("!!","???","###"))
setwd("H:/COMP120/Tests/Test1")
# Question 3 - provide answers to all the parts of the question (a-g) below
# Question 3a
growth_tbl <- read_csv("scales.csv", na=c("!!","???","###"))
sum(is.na(growth_tbl))
View(growth_tbl)
# Question 3b
growth_tbl
# Question 3 - provide answers to all the parts of the question (a-g) below
# Question 3a
growth_tbl <- read_csv("scales.csv", na=c("!!","??","###"))
# Question 3b
growth_tbl
# Question 3b
growth_tbl %>%
mutate(Date = as_date(Date))
# Question 3 - provide answers to all the parts of the question (a-g) below
# Question 3a
growth_tbl <- read_csv("scales.csv", na=c("!!","??","###"))
# Question 3b
growth_tbl %>%
mutate(Date = dmy(Date))
# Question 3c
growth_tbl %>%
mutate(Height = Height/100) #convert cm to m
# Question 3d
growth_tbl %>%
mutate(BMI = compute_BMI(Height,Weight))
View(growth_tbl)
# Question 3 - provide answers to all the parts of the question (a-g) below
# Question 3a
growth_tbl <- read_csv("scales.csv", na=c("!!","??","###"))
# Question 3b
growth_tbl <- growth_tbl %>%
mutate(Date = dmy(Date)) #convert chr column to date type
# Question 3c
growth_tbl <- growth_tbl %>%
mutate(Height = Height/100) #convert cm to m
# Question 3d
growth_tbl <- growth_tbl %>%
mutate(BMI = compute_BMI(Height,Weight))
View(growth_tbl)
# Question 3e
growth_tbl <- growth_tbl %>%
mutate(BMI_Class = cut(x = BMI,
breaks = c(0,17,24,29,39,Inf),
include.lowest = FALSE, #do not include 0 minute
right = FALSE,
ordered_result = TRUE,
labels = c("Underweight","Healthy","Overweight","Obese","Extremely Obese")))
View(growth_tbl)
# Question 3f
growth_tbl  <- growth_tbl %>%
filter(!is.na(growth_tbl))
View(growth_tbl)
# Question 3f
growth_tbl  <- growth_tbl %>%
filter(!is.na(growth_tbl))
# Question 3f
growth_tbl  <- growth_tbl %>%
filter(!is.na(Weight))
sum(is.na(growth_tbl))
# Question 3g
growth_tbl %>%
ggplot(mapping = aes(x=Date, y=Weight))+
geom_point(aes(col=BMI_Class))+
xlab("Date")+
ylab("Weight in Kilograms")+
ggtitle("Weight Over Time")
# Question 3g
growth_tbl %>%
ggplot(mapping = aes(x=Date, y=Weight))+
geom_point(aes(col=BMI_Class))+
geom_smooth()+
xlab("Date")+
ylab("Weight in Kilograms")+
ggtitle("Weight Over Time")
# Question 4 - the question that uses the gapminder data
library(gapminder )
# Question 4 - the question that uses the gapminder data
library(gapminder)
# Question 4 - the question that uses the gapminder data
install.packages(gapminder)
# Question 4 - the question that uses the gapminder data
install.packages(gapminder)
library(gapminder)
?gapminder
gapminder <- read_csv("gapminder_data.csv")
gapminder
summary(gapminder)
gapminder %>%
filter(country == "New Zealand" | country == Australia)
gapminder %>%
filter(country == "New Zealand" || country == Australia)
gapminder %>%
filter(country == "New Zealand" | country == Australia)
gapminder %>%
filter(continent == "Oceania")
gapminder %>%
filter(continent == "Oceania") %>%
unique(country)
gapminder %>%
filter(continent == "Oceania")
oceania <- gapminder %>%
filter(continent == "Oceania")
View(oceania)
gapminder  <- gapminder %>%
mutate(lifeExpInWeeks = lifeExp*52)
oceania <- gapminder %>%
filter(continent == "Oceania")
oceania
oceania <- gapminder %>%
filter(continent == "Oceania") %>%  #We're only interested in Oceania countries
arrange(desc(country))
oceania
head(oceania,16)
oceania %>%
ggplot(mapping = aes(x=lifeExpInWeeks, y=country))+
geom_boxplot(aes(fill=country))+
ggtitle("Life expectancy in New Zealand and Australia from 1952 to 1997")+
xlab("Life Expectancy (in weeks)")+
ylab("Country")
oceania <- gapminder %>%
filter(continent == "Oceania"& year<2000) %>%  #We're only interested in Oceania countries
select(country, continent, year, lifeExp,lifeExpInWeeks) %>%
arrange(desc(country))
oceania %>%
ggplot(mapping = aes(x=lifeExpInWeeks, y=country))+
geom_boxplot(aes(fill=country))+
ggtitle("Life expectancy in New Zealand and Australia from 1952 to 1997")+
xlab("Life Expectancy (in weeks)")+
ylab("Country")
oceania
rm(list = ls())
# Question 1 on writing single commands
cat_names <- c("Fuzzy", "Bubbly", "Daisy", "Aldo", "Jasper")
cat_ages <- c(7, 5, 4, 9, 2)
cat_genders <- c("Male", "Female", "Female", "Male", "Male")
cat_owners <- c("Jay", "Nathan", "Ruth", "Nathan", "Sandra")
cats <- tibble(cat_names,cat_ages,cat_genders,cat_owners)
cats %>% filter(cat_genders=="Male") %>% select(cat_owners)
# Question 1b
#cats <- tibble(cat_names,cat_ages,cat_genders,cat_owners)
#cats %>% filter(cat_genders=="Male") %>% select(cat_owners)
cat_owners[cat_genders=="Male"] #print the names of all cat owners who own male cats
cat_names[cat_genders="Female" & cat_ages>=4]#print the name(s) of all female cats that are 4 years or older
cat_names[cat_genders=="Female" & cat_ages>=4]#print the name(s) of all female cats that are 4 years or older
# Question 3 - provide answers to all the parts of the question (a-g) below
# Question 3a
growth_tbl <- read_csv("scales.csv", na=c("!!","??","###"))
# Question 3b
growth_tbl <- growth_tbl %>%
mutate(Date = dmy(Date)) #convert chr column to date type
# Question 3c
growth_tbl <- growth_tbl %>%
mutate(Height = Height/100) #convert cm to m
# Question 3d
growth_tbl <- growth_tbl %>%
mutate(BMI = compute_BMI(Height,Weight))
# Question 3e
growth_tbl <- growth_tbl %>%
mutate(BMI_Class = cut(x = BMI,
breaks = c(0,17,24,29,39,Inf),
include.lowest = FALSE, #do not include 0 minute
right = FALSE,
ordered_result = TRUE,
labels = c("Underweight","Healthy","Overweight","Obese","Extremely Obese")))
# Question 3d
growth_tbl <- growth_tbl %>%
mutate(BMI = compute_BMI(Height,Weight))
# Question 2 on writing a function
#function to compute Body Mass Index (BMI)
compute_BMI <- function(height,weight){
return(weight/(height*height))
}
# Question 3 - provide answers to all the parts of the question (a-g) below
# Question 3a
growth_tbl <- read_csv("scales.csv", na=c("!!","??","###"))
# Question 3b
growth_tbl <- growth_tbl %>%
mutate(Date = dmy(Date)) #convert chr column to date type
# Question 3c
growth_tbl <- growth_tbl %>%
mutate(Height = Height/100) #convert cm to m
# Question 3d
growth_tbl <- growth_tbl %>%
mutate(BMI = compute_BMI(Height,Weight))
# Question 3e
growth_tbl <- growth_tbl %>%
mutate(BMI_Class = cut(x = BMI,
breaks = c(0,17,24,29,39,Inf),
include.lowest = FALSE, #do not include 0 minute
right = FALSE,
ordered_result = TRUE,
labels = c("Underweight","Healthy","Overweight","Obese","Extremely Obese")))
# Question 3f
growth_tbl  <- growth_tbl %>%
filter(!is.na(Weight)) #filter out na values containing rows
# Question 3g
growth_tbl %>%
ggplot(mapping = aes(x=Date, y=Weight))+
geom_point(aes(col=BMI_Class))+
geom_smooth()+
xlab("Date")+
ylab("Weight in Kilograms")+
ggtitle("Weight Over Time")
